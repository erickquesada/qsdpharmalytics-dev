# version: '3.8'  # Commented out as it's deprecated

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pharmalitics_db
    environment:
      - POSTGRES_DB=pharmalitics
      - POSTGRES_USER=pharmalitics_user
      - POSTGRES_PASSWORD=pharmalitics_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - pharmalitics-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pharmalitics_redis
    command: redis-server --requirepass redis_pass
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pharmalitics-network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: pharmalitics_api
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app/backend
      - ./shared:/app/shared
      - ./reports:/app/reports
      - ./uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://pharmalitics_user:pharmalitics_pass@postgres:5432/pharmalitics
      - REDIS_URL=redis://:redis_pass@redis:6379
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ENVIRONMENT=development
      - API_V1_STR=/api/v1
      - BACKEND_CORS_ORIGINS=["http://localhost:3000","https://localhost:3000"]
    depends_on:
      - postgres
      - redis
    networks:
      - pharmalitics-network
    restart: unless-stopped

  # React Frontend  
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: pharmalitics_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8001
      - REACT_APP_API_V1_STR=/api/v1
      - GENERATE_SOURCEMAP=false
    depends_on:
      - backend
    networks:
      - pharmalitics-network
    restart: unless-stopped

  # PgAdmin Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pharmalitics_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@pharmalitics.local
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - pharmalitics-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pharmalitics_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./static:/var/www/static
    depends_on:
      - backend
      - frontend
    networks:
      - pharmalitics-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  pharmalitics-network:
    driver: bridge